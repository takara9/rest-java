apiVersion: v1
kind: Service
metadata:
  name: postgres-spring
  labels:
    app: postgres-spring
spec:
  ports:
  - port: 5432
    name: postgres-spring
  clusterIP: None        ## 特徴① ヘッドレスサービスを設定
  selector:
    app: postgres-spring ## 後続のステートフルセットと関連づけ
---
## Postgres ステートフルセット
#
apiVersion: apps/v1      ## 表1 ステートフルセット参照
kind: StatefulSet
metadata:
  name: postgres
spec:                       ## 表2 ステートフルセットの仕様
  serviceName: postgres     ## 特徴② 連携するサービス名を設定
  replicas: 1               ## ポッド起動数
  selector:
    matchLabels:
      app: postgres-spring
  template:                 ## 表3 ポッドテンプレートの仕様
    metadata:
      labels:
        app: postgres-spring
    spec:
      containers:           
      - name: postgres
        image: postgres:alpine   ## DockerHub リポジトリを指定
        env:
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_DB
          value: demodb
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:       ## 特徴③コンテナ上のマウントポイント設定
        - name: pvc
          mountPath: /var/lib/postgresql
          subPath: data     ## 初期化時に空ディレクトリが必要なため
        #livenessProbe:      ## 稼働チェック
        #  exec:
        #    command: ["pg_isready","-username=postgres","--dbname=demodb"]
        #  initialDelaySeconds: 60
        #  timeoutSeconds: 10
  volumeClaimTemplates:     ## 特徴④ボリューム要求テンプレート
  - metadata:
      name: pvc
    spec:                   ## 表4 永続ボリューム要求の雛形
      accessModes: [ "ReadWriteOnce" ]
      ## 環境に合わせて選択して、storageの値を編集
      storageClassName: ibmc-vpc-block-10iops-tier
      #storageClassName: ibmc-file-bronze   # 容量 20Gi IKS
      #storageClassName: gluster-heketi    # 容量 12Gi GlusterFS
      #storageClassName: standard           # 容量 2Gi  Minikube/GKE
      resources:
        requests:
          storage: 2Gi
